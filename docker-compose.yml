version: "3.8"

services:
  frontend:
    build:
      dockerfile: Dockerfile
      context: ./linkedin  
    ports:
      - "4200:4200"
    depends_on:
      - backend
    networks:
      - linkedin_network

  backend:
    build:
      context: ./Linkedinbackend
      dockerfile: Dockerfile
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Admin
      - POSTGRES_DATABASE=linkedin
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - linkedin_network

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Admin
      - POSTGRES_DB=linkedin
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - linkedin_network

volumes:
  postgres_data:

networks:
  linkedin_network:
    driver: bridge
